name: Build and Release Windows Executable

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

      - name: Install MinGW-w64 and CMake
        run: |
          choco install mingw -y
          choco install cmake -y

      - name: Add MinGW to PATH
        run: |
          echo "C:\ProgramData\chocolatey\bin" >> $env:GITHUB_PATH
          echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $env:GITHUB_PATH

      - name: Verify GCC and CMake installation
        run: |
          gcc --version
          cmake --version

      - name: Configure CMake for static linking
        run: |
          mkdir build
          cd build
          cmake .. -G "MinGW Makefiles" -DCMAKE_EXE_LINKER_FLAGS="-static"

      - name: Build project statically
        run: |
          cd build
          mingw32-make

      - name: Package executable
        run: |
          cd build
          mkdir -p ../release
          cp DLL_Injection_XiaoaiAgent.exe ../release/

      - name: Delete existing release tag if it exists
        id: delete_existing_release
        run: |
          git push origin :refs/tags/${{ github.event.inputs.release_tag }} || true
        continue-on-error: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          release_name: Release ${{ github.event.inputs.release_tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}  # Use PAT instead of default GITHUB_TOKEN

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/DLL_Injection_XiaoaiAgent.exe
          asset_name: DLL_Injection_XiaoaiAgent.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}  # Use PAT instead of default GITHUB_TOKEN



